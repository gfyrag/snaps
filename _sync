#!/bin/bash

[ $1 ] || {
	echo "Missing workdir"
	exit 1
}

[ $2 ] || {
	echo "Missing remote"
}

[ $3 ] || {
	echo "Missing remote dir"
}

workdir=$(readlink -m $1)
scriptlocation=$(dirname "${BASH_SOURCE[0]}")
dev=$($scriptlocation/_whichdev $workdir)
mountPoint=/tmp/$RANDOM
remote=$2
remotedir=$3
snapsdir=$mountPoint/.snaps$workdir/snaps
rosnapsdir=$mountPoint/.snaps$workdir/ro

mkdir -p $mountPoint
mount -t btrfs -o subvolid=0 $dev $mountPoint

if [ "$?" == "0" ]; then

	mkdir -p $rosnapsdir

	for p in $(ls $snapsdir | head -n -1); do
		btrfs sub snapshot -r $snapsdir/$p $rosnapsdir/$p
	done
	sync

	firstSnapshot=$(ls $rosnapsdir | head -1)

	ssh $remote mkdir -p $remotedir
	ssh $remote test -e $remotedir/$firstSnapshot
	if [ "$?" != 0 ]; then # First snapshot not found
		btrfs send $rosnapsdir/$firstSnapshot |ssh $remote sudo btrfs receive $remotedir
	fi

	previous=$firstSnapshot
	for p in $(ls $rosnapsdir | tail -n +2); do
		btrfs send -p $rosnapsdir/$previous $rosnapsdir/$p |ssh $remote sudo btrfs receive $remotedir
	done

	for p in $(ls $snapsdir | head -n -1); do
		btrfs sub del $rosnapsdir/$p
	done
	sync

	rmdir $rosnapsdir

	# Umount tmp fs
	umount $mountPoint
else
	echo "Unable to mount $dev on $mountPoint"
fi

rmdir $mountPoint